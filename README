Monsti CMS
==========

Monsti is a simple CMS designed to efficiently manage multiple small websites.

It has a simple and concurrent design that makes it highly scalable and
parallelizable.

Monsti does only have simple access control features and no support for
workflows at all. It's mainly used for hierarchical private and small business
sites.  While it has a user friendly web frontend to manage the content of the
site, some features are only accessible through the command line or via
configuration files. This makes editing content user friendly, but
administration and advanced site building web developer friendly.

Its written in Go, a statically typed compiled language that feels almost like a
dynamic language.

Monsti is still under heavy development and unstable. You should not use it for
critical tasks.

Have a look at Monsti's roadmap:
https://github.com/monsti/monsti-cms/wiki/RoadMap

Design goals
------------

 - Simple but concurrent design.
 - Low resource usage, especially memory usage. This goal is more important for
   multi site instances.
 - Simple access control: Objects are private or public, no groups, only
   authenticated users which may access private objects.
 - Simple architecture: use flat files instead of a DBMS.
 - Simple and intuitive web user interface.


Flat files
----------

Monsti doesn't use a DBMS but flat files. Sites are organized as trees where
each node corresponds to a subdirectory in the flat file directory tree. Each
node's subdirectory contains its data and meta-data. Every subdirectory consists
of a node.yaml YAML formatted file describing the node. A typical structure might
look like this ('/' is the root of the site's data directory):

/about
/about/body.html
/about/node.yaml
/body.html
/contact
/contact/body.html
/contact/node.yaml
/navigation.yaml
/node.yaml


Project
-------

http://www.monsti.org

Development happens at
https://github.com/monsti

Contact the author at
cneumann@datenkarussell.de
